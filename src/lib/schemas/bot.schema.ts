import * as z from 'zod';

export const createBotSchema = z.object({
  name: z.string().min(1, { message: 'Name is required.' }).max(100),
  description: z.string().max(500).optional(),
  model: z.string({ required_error: "Please select a model." }),
  instructions: z.string().max(2000).optional(),
  operatingMode: z.enum(['rag', 'agentic']).default('rag'),
  agentRole: z.enum(['standalone', 'supervisor', 'subAgent']).default('standalone'),
  isAgent: z.boolean().default(false),
  isSubAgent: z.boolean().default(false),
  selectedTools: z.array(z.string()).optional(),
  selectedSubAgents: z.array(z.string()).optional(),
  inputGuardrail: z.string().default('none'),
  outputGuardrail: z.string().default('none'),
  enableReRanking: z.boolean().default(false),
  retrievedContextCitation: z.boolean().default(false),
  enableAdvancedConfigurations: z.boolean().default(false), 
  generationConfigTemperature: z.coerce.number().min(0).max(2).optional().default(0.7),
  maxOutputTokens: z.coerce.number().min(1).max(8192).optional().default(2048),
  topK: z.coerce.number().min(1).max(100).optional().default(40),
  topP: z.coerce.number().min(0).max(1).optional().default(0.95),
  endSequence: z.string().optional().default(''),
  embeddingModel: z.string().optional().default("text-embedding-004"),
  chunkSize: z.coerce.number().min(100).max(2000).optional().default(1000),
  chunkOverlap: z.coerce.number().min(0).max(500).optional().default(200),
  enableDetailedPdfAnalysis: z.boolean().default(false),
  searchStrategy: z.string().optional().default("vector-cosine"),
  maxResults: z.coerce.number().min(1).max(50).optional().default(10),
  consolidateSearchResultsBySource: z.boolean().default(false),
});

export type CreateBotFormValues = z.infer<typeof createBotSchema>;

export const defaultBotFormValues: CreateBotFormValues = {
  name: '',
  description: '',
  model: undefined as any,
  instructions: '',
  operatingMode: 'rag',
  agentRole: 'standalone',
  isAgent: false,
  isSubAgent: false,
  selectedTools: [],
  selectedSubAgents: [],
  inputGuardrail: 'none',
  outputGuardrail: 'none',
  enableReRanking: false,
  retrievedContextCitation: false,
  enableAdvancedConfigurations: false, 
  generationConfigTemperature: 0.7,
  maxOutputTokens: 2048,
  topK: 40,
  topP: 0.95,
  endSequence: '',
  embeddingModel: "text-embedding-004",
  chunkSize: 1000,
  chunkOverlap: 200,
  enableDetailedPdfAnalysis: false,
  searchStrategy: "vector-cosine",
  maxResults: 10,
  consolidateSearchResultsBySource: false,
};